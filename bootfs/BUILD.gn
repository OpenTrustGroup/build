# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/fuchsia/bootdata.gni")
import("//build/gn/config.gni")
import("//build/package.gni")

declare_args() {
  # A list of labels for `bootdata` targets (see //build/bootdata.gni)
  # to roll into the final bootable image.  These targets must use the
  # default `output_name` and `output_extension`.
  extra_bootdata = []
}

# Mark as testonly to be able to depend on //build/gn:* targets.
testonly = true

# Package up the /system filesystem.
bootdata("system_bootfs") {
  assert(bootfs_packages, "bootfs_packages=true required for /system bootfs images")

  deps = [
    "//build/gn:finalize_manifests",
  ]
  inputs = [
    final_system_manifest,
  ]
}

# DEPRECATED
# Roll those together into the image for booting with /system from RAM disk.
bootdata("mkbootfs") {
  output_name = "user"
  output_extension = "bootfs"
  deps = [
    ":system_bootfs",
  ]
  inputs = []
  foreach(label, deps) {
    inputs += get_target_outputs(label)
  }

  bootdata_label = "//build/gn:bootdata-${zircon_platforms[0]}"

  extra_input_labels = [bootdata_label] + extra_bootdata
  deps += extra_input_labels

  foreach(label, extra_input_labels) {
    # get_target_outputs only works on labels defined in the same file.
    # So just assume each `bootdata` target used the defaults so its
    # output file is computable directly from the target name.
    inputs += [ "$root_out_dir/" + get_label_info(label, "name") + ".bin" ]
  }
}

group("bootfs") {
  deps = [
    ":mkbootfs",
  ]
  foreach(platform, zircon_platforms) {
    deps += [ "//build/gn:bootdata-${platform}" ]
  }
}
