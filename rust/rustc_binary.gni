# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/rustc_artifact.gni")

# Defines a Rust binary
#
# Parameters
#
#   name
#     Name of the crate as defined in its manifest file. If not specified, it is
#     assumed to be the same as the target name.
#
#   version (optional)
#     Semver version of the crate as seen on crates.io.
#
#   deps (optional)
#     List of rust_library GN targets on which this crate depends.
#     Third party crates can be included through paths like
#     "//third_party/rust-crates/rustc_deps:<cratename>",
#
#   non_rust_deps (optional)
#     List of non-rust_library GN targets on which this crate depends.
#
#   with_unit_tests (optional)
#     Builds unit tests associated with the binary. This will create a
#     `<name>-bin-unit-test` test file in the output directory.
#
#   source_dir (optional)
#     Location of directory in which `${source_dir}/src/main.rs` can be found.
#     This defaults to the current directory, and should only be changed when
#     absolutely necessary (such as in the case of generated code).
#
#   output_name (optional)
#     Name of the output file.
#
# Example of usage:
#
#   rustc_library("foo") {
#     deps = [
#       "//garnet/public/rust/crates/bar",
#       "//third_party/rust-crates/rustc_deps:clap",
#       "//third_party/rust-crates/rustc_deps:serde",
#       "//third_party/rust-crates/rustc_deps:slab",
#     ]
#     with_unit_tests = true
#   }
template("rustc_binary") {
  rustc_artifact(target_name) {
    forward_variables_from(invoker,
                           [
                             "name",
                             "version",
                             "deps",
                             "non_rust_deps",
                             "with_unit_tests",
                             "output_name",
                             "source_dir",
                           ])
    type = "bin"
  }
}
